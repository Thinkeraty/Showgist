const mongoose = require("mongoose"),
  marked = require("marked"),
  slugify = require("slugify"),
  createDomPurify = require("dompurify"),
  { JSDOM: JSDOM } = require("jsdom"),
  dompurify = createDomPurify(new JSDOM().window),
  articleSchema = new mongoose.Schema({
    image: { type: String, required: !0 },
    author: { type: String, required: !0 },
    title: { type: String, required: !0 },
    description: { type: String },
    markdown: { type: String, required: !0 },
    createdAt: { type: Date, default: Date.now },
    slug: { type: String, required: !0, unique: !0 },
    category: { type: String, required: !0 },
    categorySlug: { type: String, required: !0 },
    sanitizedHtml: { type: String, required: !0 },
  });
articleSchema.pre("validate", function (e) {
  this.title &&
    ((this.slug = slugify(this.title, { lower: !0, strict: !0 })),
    (this.categorySlug = slugify(this.category, { lower: !0, strict: !0 }))),
    marked.setOptions({
      baseUrl: null,
      breaks: false,
      gfm: !0,
      headerIds: !0,
      headerPrefix: "",
      highlight: null,
      langPrefix: "language-",
      mangle: !0,
      pedantic: !1,
      sanitize: !1,
      sanitizer: null,
      silent: !1,
      smartLists: !1,
      smartypants: !1,
      tokenizer: null,
      xhtml: !1,
    }),
    this.markdown && (this.sanitizedHtml = marked(this.markdown)),
    e();
}),
  (module.exports = mongoose.model("Article", articleSchema));
